// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P2PLending.Web.DAL.DataContext;

namespace P2PLending.Web.DAL.Migrations
{
    [DbContext(typeof(P2PLendingDbContext))]
    [Migration("20210803035127_update_validate_attribute")]
    partial class update_validate_attribute
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.Account.AccountMobile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("current_device_id")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("current_device_name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("fcm_token")
                        .HasColumnType("longtext");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password_hash_algorithm")
                        .HasColumnType("longtext");

                    b.Property<string>("password_salt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("referrer_account_id")
                        .HasColumnType("int");

                    b.Property<string>("referrer_phone")
                        .HasColumnType("longtext");

                    b.Property<long>("registration_time")
                        .HasColumnType("bigint");

                    b.Property<string>("role")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("account_mobile");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.Account.AccountOperation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("avatar")
                        .HasColumnType("longtext");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("department_id")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("full_name")
                        .HasColumnType("longtext");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("is_wait_password_create")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("manager_id")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password_hash_algorithm")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("password_reset_expire")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("password_reset_token")
                        .HasColumnType("longtext");

                    b.Property<bool?>("password_reset_token_consumed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("password_salt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("position_id")
                        .HasColumnType("int");

                    b.Property<long>("registration_time")
                        .HasColumnType("bigint");

                    b.Property<string>("role")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("username")
                        .IsUnique();

                    b.ToTable("account_operation");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.AccountLinkedPayment.MobileLinkedPayment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("account_id")
                        .HasColumnType("int");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<string>("service_account_id")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("service_account_name")
                        .HasColumnType("longtext");

                    b.Property<int>("service_id")
                        .HasColumnType("int");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("mobile_linked_payments");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.AddressEntity.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address_detail")
                        .HasColumnType("longtext");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("level1_id")
                        .HasColumnType("longtext");

                    b.Property<string>("level2_id")
                        .HasColumnType("longtext");

                    b.Property<string>("level3_id")
                        .HasColumnType("longtext");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.AddressEntity.AddressLevel1", b =>
                {
                    b.Property<string>("level1_id")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("type")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("level1_id");

                    b.ToTable("address_level_1");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.AddressEntity.AddressLevel2", b =>
                {
                    b.Property<string>("level2_id")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("level1_id")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("type")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("level2_id");

                    b.HasIndex("level1_id");

                    b.ToTable("address_level_2");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.AddressEntity.AddressLevel3", b =>
                {
                    b.Property<string>("level3_id")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("level2_id")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("type")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("level3_id");

                    b.HasIndex("level2_id");

                    b.ToTable("address_level_3");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.Borrower.BorrowerProfile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("account_id")
                        .HasColumnType("int");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("current_address_id")
                        .HasColumnType("int");

                    b.Property<int>("current_work_address_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_of_birth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("id_card_back_image")
                        .HasColumnType("longtext");

                    b.Property<string>("id_card_front_image")
                        .HasColumnType("longtext");

                    b.Property<string>("id_card_issue_by")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("id_card_issue_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("id_card_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("id_card_with_user_image")
                        .HasColumnType("longtext");

                    b.Property<int>("income")
                        .HasColumnType("int");

                    b.Property<int>("marital_status_id")
                        .HasColumnType("int");

                    b.Property<string>("occupation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("occupation_position")
                        .HasColumnType("longtext");

                    b.Property<string>("owned_type")
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<int>("resident_address_id")
                        .HasColumnType("int");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("workplace_address_id")
                        .HasColumnType("int");

                    b.Property<string>("workplace_name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("workplace_phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("id");

                    b.HasIndex("account_id");

                    b.ToTable("borrower_profiles");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.Loans.LoanApplication", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("account_id")
                        .HasColumnType("int");

                    b.Property<int>("borrower_linked_payment_service_id")
                        .HasColumnType("int");

                    b.Property<int>("borrower_profile_id")
                        .HasColumnType("int");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("fees")
                        .HasColumnType("int");

                    b.Property<float>("interest_rate")
                        .HasColumnType("float");

                    b.Property<int>("loan_amount")
                        .HasColumnType("int");

                    b.Property<int>("loan_duration")
                        .HasColumnType("int");

                    b.Property<int>("loan_product_id")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("loan_applications");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.Loans.LoanApplicationAdditionalInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("format")
                        .HasColumnType("longtext");

                    b.Property<int>("loan_application_id")
                        .HasColumnType("int");

                    b.Property<int?>("loan_applicationid")
                        .HasColumnType("int");

                    b.Property<int>("loan_product_additional_info_id")
                        .HasColumnType("int");

                    b.Property<int?>("loan_product_additional_infoid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("loan_applicationid");

                    b.HasIndex("loan_product_additional_infoid");

                    b.ToTable("loan_application_additional_infos");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.Loans.LoanApplicationValidateAttribute", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("attribute_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("column_name")
                        .HasColumnType("longtext");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("is_validate")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("loan_application_id")
                        .HasColumnType("int");

                    b.Property<string>("reason")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("reference_id")
                        .HasColumnType("int");

                    b.Property<string>("table_name")
                        .HasColumnType("longtext");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("loan_application_validate_attributes");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.Loans.LoanProduct", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("amount_unit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("million");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("duration_unit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("month");

                    b.Property<string>("icon")
                        .HasColumnType("longtext");

                    b.Property<int>("maximum_amount")
                        .HasColumnType("int");

                    b.Property<int>("maximum_duration")
                        .HasColumnType("int");

                    b.Property<int>("minimum_amount")
                        .HasColumnType("int");

                    b.Property<int>("minimum_duration")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("product_code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("product_code")
                        .IsUnique();

                    b.ToTable("loan_products");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.Loans.LoanProductAdditionalInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("info_format")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("info_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("loan_product_id")
                        .HasColumnType("int");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("loan_product_id");

                    b.ToTable("loan_product_additional_info");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.MasterData.CreditRankConfig", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<float?>("interest_rate")
                        .HasColumnType("float");

                    b.Property<int?>("max_score")
                        .HasColumnType("int");

                    b.Property<int?>("min_score")
                        .HasColumnType("int");

                    b.Property<string>("rank")
                        .HasColumnType("longtext");

                    b.Property<string>("unit")
                        .HasColumnType("longtext");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("credit_rank_configs");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.MasterData.DPDCollectFeeConfig", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("beneficial_target")
                        .HasColumnType("longtext");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<int?>("from_days")
                        .HasColumnType("int");

                    b.Property<string>("paid_target")
                        .HasColumnType("longtext");

                    b.Property<int?>("to_days")
                        .HasColumnType("int");

                    b.Property<string>("unit")
                        .HasColumnType("longtext");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("value")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("dpd_collect_fee_configs");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.MasterData.FeesParameterConfig", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("beneficial_target")
                        .HasColumnType("longtext");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("paid_target")
                        .HasColumnType("longtext");

                    b.Property<string>("unit")
                        .HasColumnType("longtext");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("value")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("fees_parameter_configs");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.MasterData.LoanManagementParameterConfig", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("unit")
                        .HasColumnType("longtext");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("value")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("loan_management_parameter_configs");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.MasterData.LoanPeriodManagementFeeConfig", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("beneficial_target")
                        .HasColumnType("longtext");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("paid_target")
                        .HasColumnType("longtext");

                    b.Property<int>("period")
                        .HasColumnType("int");

                    b.Property<string>("unit")
                        .HasColumnType("longtext");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("value")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("loan_period_management_fee_configs");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.MasterData.LoanValidateAttributeConfig", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("attribute_name")
                        .HasColumnType("longtext");

                    b.Property<string>("column_name")
                        .HasColumnType("longtext");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("display_name")
                        .HasColumnType("longtext");

                    b.Property<string>("table_name")
                        .HasColumnType("longtext");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("loan_validate_attribute_configs");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.MasterData.MaritalStatus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("status")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("status")
                        .IsUnique();

                    b.ToTable("marital_statuses");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.MasterData.Occupation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("occupations");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.MasterData.PaymentService", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("full_name")
                        .HasColumnType("longtext");

                    b.Property<string>("icon")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("type")
                        .HasColumnType("longtext");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("payment_services");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.MasterData.RelativePersonType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("type_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("relative_person_types");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.OTP.PhoneVerification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("current_sms_otp_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("is_lock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("lock_expired_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("retry_times")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("verification_expired")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("verification_type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("verified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("verified_code")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("verified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("verify_device_id")
                        .HasColumnType("longtext");

                    b.Property<string>("verify_device_name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("phone_verifications");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.OTP.SMSOTP", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("expired_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("phone_verification_id")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("phone_verification_id");

                    b.ToTable("sms_otps");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.OperatorDepartment.Department", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("code")
                        .IsUnique();

                    b.ToTable("departments");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.OperatorDepartment.Position", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("rank")
                        .HasColumnType("int");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("code")
                        .IsUnique();

                    b.ToTable("positions");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.Relative.RelativePerson", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("borrower_profile_id")
                        .HasColumnType("int");

                    b.Property<string>("create_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<int>("no")
                        .HasColumnType("int");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<int>("type_id")
                        .HasColumnType("int");

                    b.Property<string>("update_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("update_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("borrower_profile_id");

                    b.HasIndex("type_id");

                    b.ToTable("borrower_relative_persons");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.AddressEntity.AddressLevel2", b =>
                {
                    b.HasOne("P2PLending.Web.Entities.Entities.AddressEntity.AddressLevel1", "address_level_1")
                        .WithMany("level2s")
                        .HasForeignKey("level1_id");

                    b.Navigation("address_level_1");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.AddressEntity.AddressLevel3", b =>
                {
                    b.HasOne("P2PLending.Web.Entities.Entities.AddressEntity.AddressLevel2", "address_level_2")
                        .WithMany("level3s")
                        .HasForeignKey("level2_id");

                    b.Navigation("address_level_2");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.Borrower.BorrowerProfile", b =>
                {
                    b.HasOne("P2PLending.Web.Entities.Entities.Account.AccountMobile", "account_mobile")
                        .WithMany()
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("account_mobile");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.Loans.LoanApplicationAdditionalInfo", b =>
                {
                    b.HasOne("P2PLending.Web.Entities.Entities.Loans.LoanApplication", "loan_application")
                        .WithMany()
                        .HasForeignKey("loan_applicationid");

                    b.HasOne("P2PLending.Web.Entities.Entities.Loans.LoanProductAdditionalInfo", "loan_product_additional_info")
                        .WithMany()
                        .HasForeignKey("loan_product_additional_infoid");

                    b.Navigation("loan_application");

                    b.Navigation("loan_product_additional_info");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.Loans.LoanProductAdditionalInfo", b =>
                {
                    b.HasOne("P2PLending.Web.Entities.Entities.Loans.LoanProduct", "loan_type")
                        .WithMany()
                        .HasForeignKey("loan_product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("loan_type");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.OTP.SMSOTP", b =>
                {
                    b.HasOne("P2PLending.Web.Entities.Entities.OTP.PhoneVerification", "phone_verification")
                        .WithMany("smsOTPs")
                        .HasForeignKey("phone_verification_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("phone_verification");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.Relative.RelativePerson", b =>
                {
                    b.HasOne("P2PLending.Web.Entities.Entities.Borrower.BorrowerProfile", "borrower_profile")
                        .WithMany()
                        .HasForeignKey("borrower_profile_id");

                    b.HasOne("P2PLending.Web.Entities.Entities.MasterData.RelativePersonType", "relative_person_type")
                        .WithMany()
                        .HasForeignKey("type_id");

                    b.Navigation("borrower_profile");

                    b.Navigation("relative_person_type");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.AddressEntity.AddressLevel1", b =>
                {
                    b.Navigation("level2s");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.AddressEntity.AddressLevel2", b =>
                {
                    b.Navigation("level3s");
                });

            modelBuilder.Entity("P2PLending.Web.Entities.Entities.OTP.PhoneVerification", b =>
                {
                    b.Navigation("smsOTPs");
                });
#pragma warning restore 612, 618
        }
    }
}
